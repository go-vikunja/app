# Based on https://medium.com/flutter-community/automating-publishing-your-flutter-apps-to-google-play-using-github-actions-2f67ac582032

name: Flutter Release

on:  
  push:
    branches:
      - main
      - feat/fastlane-release
  release:
    types: [published]

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '17.x'
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
          bundler-cache: false

      - name: Install Fastlane dependencies
        run: |
          pwd
          cd android
          gem install bundler -v 2.4.22
          bundle config path vendor/bundle
          bundle install
          cd ..
      - name: Check gpg version
        run: gpg --version

      - name: Create keystore file from secret
        run: |
          cd android/app
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore.jks
          
      - name: Create key.properties file from secret
        run: |
          cd android/
          echo "${{ secrets.KEY_PROPERTIES }}" > key.properties
          
      - name: Create Google Play service account file
        run: |
          cd android/
          echo "${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}" > fastlane-secret.json

      - name: Testing Fastlane installation
        run: |
          pwd
          cd android
          bundle update fastlane
          bundle exec fastlane run validate_play_store_json_key json_key:fastlane-secret.json

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      - run: flutter --version
      - run: flutter pub get
      - run: flutter build appbundle --flavor production
      - run: flutter build apk --flavor production
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-release-bundle
          path: |
            build/app/outputs/bundle/productionRelease/app-production-release.aab
            build/app/outputs/flutter-apk/app-production-release.apk

      - name: Deploy to Google Play Beta
        if: github.event_name == 'push'
        run: |
          cd android
          bundle exec fastlane beta

      - name: Deploy to Google Play Production
        if: github.event_name == 'release' && github.event.action == 'published'
        run: |
          cd android
          bundle exec fastlane production_appbundle
