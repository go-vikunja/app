plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "org.jetbrains.kotlin.plugin.compose" version "2.2.0"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}


def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace 'io.vikunja.flutteringvikunja'
    //compileSdkVersion flutter.compileSdkVersion
    compileSdk = flutter.compileSdkVersion
    ndkVersion = "27.0.12077973"

    //sourceSets {
    //    main.java.srcDirs += 'src/main/kotlin'
   // }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId "io.vikunja.app"
        minSdk 23
        targetSdk flutter.targetSdkVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    productFlavors {
        unsigned {
            signingConfig signingConfigs.debug
        }
        production {
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "deploy"

    android.applicationVariants.all { variant ->
        if (variant.flavorName == "fdroid") {
            variant.outputs.all { output ->
                output.outputFileName = "app-fdroid-release.apk"
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
        debug {
            //signingConfig signingConfigs.debug
        }
    }
    lint {
        disable 'InvalidPackage'
    }


    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.5.15"
    }

}

flutter {
    source '../..'
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'
    implementation "androidx.glance:glance:1.1.1"
    implementation "androidx.glance:glance-appwidget:1.1.1"
    implementation 'com.google.code.gson:gson:2.8.5'
}

//dependencies {
//    testImplementation 'junit:junit:4.13.2'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//}
